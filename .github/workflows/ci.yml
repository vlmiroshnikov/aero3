name: Continuous Integration

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['main']
    tags: [v*]

env:
  PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  PGP_SECRET: ${{ secrets.PGP_SECRET }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.2.0]
        java: [openjdk@1.17.0]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Startup AS
        uses: ./
        id: AS

      - run: sbt ++${{ matrix.scala }} compile
      - run: sbt ++${{ matrix.scala }} test
     
  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.2.0]
        java: [openjdk@1.17.0]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Import signing key
        run: echo $PGP_SECRET | base64 -d | gpg --batch --import --verbose

      - name: Release 
        run: sbt ++${{ matrix.scala }} release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
